{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\n\n\nconst btn = document.querySelector('button[data-start]');\nbtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n    onClose(selectedDates) {\n        if (new Date().getTime() >= selectedDates[0].getTime()) {\n            alert(\"Please choose a date in the future\");\n        } else {\n            btn.disabled = false; \n        }\n  },\n};\n\n\nconst inputDate = document.querySelector(\"#datetime-picker\");\nconst fp = flatpickr(inputDate, options);\n\n\nbtn.addEventListener('click', handlerBtn);\n\nconst timer = {\n    days: document.querySelector('span[data-days]'),\n    hours: document.querySelector('span[data-hours]'),\n    minutes: document.querySelector('span[data-minutes]'),\n    seconds: document.querySelector('span[data-seconds]'),\n} \n\nfunction handlerBtn(evt) {\n    const interval = setInterval(() => {\n        let timeLeft = fp.selectedDates[0].getTime() - new Date().getTime();\n        if (timeLeft <= 0) {\n            clearInterval(interval);\n            return;\n        }\n        const convertor = convertMs(timeLeft);\n        timer.days.textContent = convertor.days;\n        if (convertor.days <10) timer.days.textContent = \"0\" + convertor.days;  \n        else timer.days.textContent = convertor.days; \n\n        if (convertor.hours <10) timer.hours.textContent = \"0\" + convertor.hours;  \n        else timer.hours.textContent = convertor.hours;  \n\n        if (convertor.minutes < 10) timer.minutes.textContent = \"0\" + convertor.minutes;\n        else timer.minutes.textContent = convertor.minutes; \n        \n        if (convertor.seconds < 10) timer.seconds.textContent = \"0\" + convertor.seconds; \n        else timer.seconds.textContent = convertor.seconds;\n        \n       }, 1000);\n    }\n\n\n"],"names":["convertMs","ms","days","hours","minutes","seconds","btn","options","selectedDates","inputDate","fp","flatpickr","handlerBtn","timer","evt","interval","timeLeft","convertor"],"mappings":"wIAGA,SAASA,EAAUC,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAIA,MAAMC,EAAM,SAAS,cAAc,oBAAoB,EACvDA,EAAI,SAAW,GAEf,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACf,QAAQC,EAAe,CACf,IAAI,KAAI,EAAG,QAAO,GAAMA,EAAc,CAAC,EAAE,UACzC,MAAM,oCAAoC,EAE1CF,EAAI,SAAW,EAExB,CACH,EAGMG,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAKC,EAAUF,EAAWF,CAAO,EAGvCD,EAAI,iBAAiB,QAASM,CAAU,EAExC,MAAMC,EAAQ,CACV,KAAM,SAAS,cAAc,iBAAiB,EAC9C,MAAO,SAAS,cAAc,kBAAkB,EAChD,QAAS,SAAS,cAAc,oBAAoB,EACpD,QAAS,SAAS,cAAc,oBAAoB,CACxD,EAEA,SAASD,EAAWE,EAAK,CACrB,MAAMC,EAAW,YAAY,IAAM,CAC/B,IAAIC,EAAWN,EAAG,cAAc,CAAC,EAAE,QAAO,EAAK,IAAI,OAAO,UAC1D,GAAIM,GAAY,EAAG,CACf,cAAcD,CAAQ,EACtB,MACH,CACD,MAAME,EAAYjB,EAAUgB,CAAQ,EACpCH,EAAM,KAAK,YAAcI,EAAU,KAC/BA,EAAU,KAAM,GAAIJ,EAAM,KAAK,YAAc,IAAMI,EAAU,KAC5DJ,EAAM,KAAK,YAAcI,EAAU,KAEpCA,EAAU,MAAO,GAAIJ,EAAM,MAAM,YAAc,IAAMI,EAAU,MAC9DJ,EAAM,MAAM,YAAcI,EAAU,MAErCA,EAAU,QAAU,GAAIJ,EAAM,QAAQ,YAAc,IAAMI,EAAU,QACnEJ,EAAM,QAAQ,YAAcI,EAAU,QAEvCA,EAAU,QAAU,GAAIJ,EAAM,QAAQ,YAAc,IAAMI,EAAU,QACnEJ,EAAM,QAAQ,YAAcI,EAAU,OAE3C,EAAE,GAAI,CACd"}